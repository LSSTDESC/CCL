name: continuous-integration

on:
  push:
    branches:
      - main
      - master
      - releases/*
  pull_request: null

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, ubuntu-latest]
        include:
          - os: macos-11
            label: osx-64
            prefix: /Users/runner/miniconda3

          - os: ubuntu-latest
            label: linux-64
            prefix: /usr/share/miniconda3
        py:
          - 3.8

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v3

      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.py }}
          channels: conda-forge, defaults
          channel-priority: strict
          show-channel-urls: true
          miniforge-version: latest
          miniforge-variant: Mambaforge
        env:
          CACHE_NUMBER: 0  # increase to reset cache manually
          DEPENDENCIES: .github/workflows/dependencies.yml
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Remove homebrew
        if: matrix.os == 'macos-11'
        run: |
          curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall.sh -o uninstall_homebrew.sh
          chmod u+x ./uninstall_homebrew.sh
          ./uninstall_homebrew.sh -f -q >& /dev/null
          rm -f uninstall_homebrew.sh

      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ matrix.prefix }}
          key: ${{ matrix.label }}-conda-${{ hashFiles(env.DEPENDENCIES) }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}

      # - name: lint
      #   run: |
      #     export MAMBA_NO_BANNER=1
      #     mamba install flake8
      #     flake8 pyccl
      #     flake8 --exclude=data benchmarks
      #     if [[ `grep "$(printf '\t')" pyccl/*.py` != "" ]]; then
      #       exit 1
      #     fi

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mamba env update --file ${{ env.DEPENDENCIES }} --prune
          # mamba install \
          #   pip \
          #   numpy nose coveralls pyyaml gsl fftw cmake swig scipy \
          #   compilers pkg-config setuptools_scm pytest pandas pytest-cov \
          #   cython "camb=1.3.6" isitgr traitlets fast-pt

          if [[ ${MATRIX_OS} == "macos-11" ]]; then
            export CFLAGS="-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include"
            export LDFLAGS="-L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib"

            mamba install llvm-openmp
            echo "DYLD_FALLBACK_LIBRARY_PATH=${CONDA_PREFIX}/lib" >> $GITHUB_ENV
            SDKROOT=$(xcrun --sdk macosx --show-sdk-path)
            echo "SDKROOT: ${SDKROOT}"
            echo "SDKROOT=${SDKROOT}" >> $GITHUB_ENV
            echo "CONDA_BUILD_SYSROOT=${SDKROOT}" >> $GITHUB_ENV
          fi

          pip install "classy<3"

        env:
          MATRIX_OS: ${{ matrix.os }}

      - name: Install CCL
        run: |
          pip install -e .

      - name: Unit tests
        run: |
          OMP_NUM_THREADS=2 pytest -vv pyccl --cov=pyccl

      - name: Benchmarks
        run: |
          OMP_NUM_THREADS=2 pytest -vv benchmarks --cov=pyccl --cov-append

      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          coveralls --service=github

# #################################
# Auto correlation Gauss selection mean_z = 1.00, sigma_z=0.02 with RSD
# #################################

#
#    Cl parameters : see angpow_clbase.h
#    ell in [0, Lmax-1]
#    ell sampling lineat up to linearStep then logarithmic. If logStep=0 ell sampling linear
#   *

Lmax = 1000
linearStep = 40
logStep = 1.15

%    Selection Windows : see. angpow_radial.h
%    Window_t: type of selection in redshift
%      . Dirac: 1 redshift
%      . Gauss: gaussian selection
%      . GaussGal: gaussian selection x dN/dz-galaxy function 
%      . TopHat: sharp cut [zmin, zmax]
%    mean, width: the mean value of the z-selection and width = 1 sigma (Gauss) or  1/2 half width for TopHat
%    n_sigma_cut: z in [mean - n_sigma_cut * width, mean + n_sigma_cut * width] 
%   */

wtype = Gauss
mean  = 1.00
width = 0.02

n_sigma_cut = 5


#    Control integration algorithm : see angpow_pk2cl.h
#      . kmax : value in Mpc^-1 of the maximum value of k to be considered in the k-integration
#      . radial_order_1: the quadrature order over the redshift axis for the first selection Window
#      . chebyshev_order_1 : Order of the Chebyshev Transform for k*Sqrt[Pws]*Bessel(r(z1)*k) (first selection Window)
#      . idem for radial_order_2 & chebyshev_order_2 for the second selection Window
#      . n_bessel_roots_per_interval: the k-integration is performed by sum over intervales defined using
#        j_l(x) roots. This parameter control how many roots to be gathered in a single intervalle where the functions
#	are expended over Chebyshev polynomial series.
#      . total_weight_cut: to be taken into account, the product of quadrature weights and selection 
#                          function satisfies |wij|>total_weight_cut. 0 means no cut
#      . if has_deltaR_cut == true; then to be taken into account |r(z_i) - r(r_j)|<deltaR_cut (Mpc); 
#           if has_deltaR_cut == false ù> no cut on |r(z_i) - r(r_j)| applied
# 
cl_kmax = 1.0
radial_order = 70
chebyshev_order = 9
n_bessel_roots_per_interval = 100

total_weight_cut = 1.e-6
has_deltaR_cut = 1
deltaR_cut = 300.


#    Cosmological parameters: see angpow_cosmo.h (Simple Cosmological Universe)
#     . h: the reduced Hubble constant value normalized to 100 km/s/Mpc (h = H0/100) 
#     . omega_matter: z=0 matter density 
#     . omega_baryon: z=0 baryon density
#     . hasX        : if omega_X is set or not
#     . omega_X     : z=0 general dark energy density
#     . wX, waX     = z=0 dark energy equation of state density w(a) = wX + waX*(1-a)
#     . nb: values fixed by default
#          omega Radiation = h^2 rho_gamma/rho_critic = h^2 4.6417e-31/1.879e-26;
#	  omega Lambda    = 1 - (omegamat_ + omegarad_ + omegaX_)
#          omega Curvature = (1. - (omegamat_ + omegarad_ + omegaL_ + omegaX_));
#     . bias         : galaxy bias (constant with redshift) 
#     . include_rsd        : if RSD effects are include or not

h = 0.679
omega_matter = 0.3065
omega_baryon = 0.0483
hasX = 0
omega_X =
wX =
waX =
bias = 1.0
include_rsd = 1

#    Cosmological distances interpolation parameters: see angpow_cosmo.h 
#      . z in [zmin, zmax]
#      . npts: number of z to used by the interpolation
#      . precision: precision of the integration  1/E(z) dz

cosmo_zmin = 0.
cosmo_zmax = 10.
cosmo_npts = 1000
cosmo_precision = 0.001
  
#    Bessel parameters (see angpow_bessel.cc MakeBesselJImpXmin method)
#      find x_min such that j_l(x_min) = jl_xmin_cut for l in [0, Lmax_for_xmin-1] 

Lmax_for_xmin = 2000
jl_xmin_cut   = 5e-10
  

#    IOs
#     . output_dir: directory fo output files (ex. Cls)
#     . common_file_tag: tag common to all output files (ex. angpow_cls.txt)
#     . quadrature_rule_ios_dir: directory where to find and/or save the quadrature files
# 

output_dir = ./
common_file_tag = angpow_bench6_
quadrature_rule_ios_dir = ./data/

#    Power Spectrum file (zref = 0) see angpow_powspec.h
#      P(k) in Mpc^3	
#     . power_spectrum_input_dir: directory location
#     . power_spectrum_input_file: file name
#     . pw_kmin: minimal k used in the file (k in Mpc^-1)
#     . pw_kmax: maximal k "
#     

power_spectrum_input_dir = ./data/
power_spectrum_input_file = classgal_pk_z0.dat
pw_kmin = 1.e-5
pw_kmax = 100.

